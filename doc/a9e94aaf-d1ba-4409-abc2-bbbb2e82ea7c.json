{
    "summary": "This code imports inspect module and defines a function retrieve_name which takes a variable as an input. The function finds the name of the local variable that holds the given value, by checking all local variables in the current stack frame. It returns a list containing the names of such variables. In this specific example, it will return the name of the variable which holds the value of 'y'.",
    "details": [
        {
            "comment": "This code imports inspect module and defines a function retrieve_name which takes a variable as an input. The function finds the name of the local variable that holds the given value, by checking all local variables in the current stack frame. It returns a list containing the names of such variables. In this specific example, it will return the name of the variable which holds the value of 'y'.",
            "location": "\"/media/root/Prima/works/generated_docs/lazer_doc/src/metalearning/methodBank/analyzer/returnSameVar.py\":0-11",
            "content": "import inspect\n\"\"\"\ny3=[0,1,2][2]\ny2=y3\nx,y,z = 1,y2,3\ny0=2\ny1=y\"\"\"\ndef retrieve_name(var):\n    callers_local_vars = inspect.currentframe().f_back.f_locals.items()\n    return [var_name for var_name, var_val in callers_local_vars if var_val is var]\n#print (retrieve_name(y))"
        }
    ]
}